Irrelevant Ballots Independent Fallback Approval (IBIFA) is a method designed by Chris Benham.

In the three-slot case, IBIFA is like [[MCA]], except that in place of checking for a candidate with top-slot ratings from a majority of the ballots, one checks whether the quantity of top-slot ratings is sufficient to defeat the total approval (i.e. above-bottom ratings) of any other candidate, not including approval from the ballots that count to the the top-slot ratings. If any candidates pass this test, the one of them with the most top-slot ratings is elected. (If no voters tie multiple candidates at the top slot, a maximum of one candidate will be able to pass the test.)

The weakness of MCA is that one's top-slot preference's security against one's middle-slot preference is based on the likelihood that that the top-slot preference will have a majority of top-slot preferences. However, narrow majorities can easily be eliminated by adding "irrelevant ballots" for minor candidates. Under IBIFA the top-slot preference's security is based on that candidate's likelihood of being able to beat any other single candidate. This may be more predictable and strategically useful than a majority-based rule.

Here is an example to illustrate the difference:
 51 A>C
 47 B
 2  C
 100

MCA and IBIFA both elect A. If B had received more votes than A, but not a majority, the A voters would be able to use their C preference to ensure that they got their second choice. Since A received a majority, the C preference is not needed.

Now add 5 D ballots:

 51 A>C
 47 B
 2  C
 5  D
 105

IBIFA still elects A, but MCA moves the win to C because A no longer has a majority. In IBIFA's view the new D ballots are "irrelevant" and don't take the win away from A, because there is still no candidate who can compete with A's top-slot preference count. Tying the usage of the middle-slot preference to the actual viability of the top-slot preference means it is more safe to offer middle-slot preferences, with less fear that they will end up counting with as much weight as a top-slot preference.

IBIFA also does not sacrifice MCA's [[FBC]] compliance. If raising one's favorite candidate to equal-top doesn't make that candidate win, it also can't change the preexisting winner.




4-slot version:


*Voters fill out 4-slot ratings ballots, rating each candidate as either Top, Middle1, Middle2
>or Bottom. Default rating is Bottom, signifying least preferred and unapproved.
>
>
>Any rating above Bottom is interpreted as Approval.
>
>
>If any candidate/s X has a Top-Ratings score that is higher than any other candidate's approval
>score on ballots that don't top-rate X, elect the X with the highest TR score.
>
>
>Otherwise, if any candidate/s X has a Top+Middle1 score that is higher than any other candidate's
>approval score on ballots that don't give X a Top or Middle1 rating, elect the X with the highest
>Top+Middle1 score.
>
>
>Otherwise, elect the candidate with the highest Approval score.*(Obviously other slot names are possible, such as 3 2 1 0 or  A B C D or  Top, High Middle, Low Middle, Bottom.)

The 3-slot version:


*Voters fill out 3-slot ratings ballots, rating each candidate as either Top, Middle
>or Bottom. Default rating is Bottom, signifying least preferred and unapproved.
>
>Any rating above Bottom is interpreted as Approval.
>
>If any candidate/s X has a Top-Ratings score that is higher than any other candidate's approval
>score on ballots that don't top-rate X, elect the X with the highest TR score.
>
>Otherwise, elect the candidate with the highest Approval score.*
>

It can also be adapted for use with ranked ballots:


*Voters rank the candidates, beginning with those they most prefer. Equal-ranking and truncation
are allowed.

Ranking above at least one other candidate is interpreted as Approval.

The ballots are interpreted as multi-slot ratings ballots thus:
An approved candidate ranked below zero other candidates is interpreted as Top-Rated.
An approved candidate ranked below one other candidate is interpreted as being in the second-highest
ratings slot.
An approved candidate ranked below two other candidates is interpreted as being in the third-highest
ratings slot (even if this means the second-highest ratings slot is left empty).
An approved candidate ranked below three other candidates is interpreted as being in the fourth-highest
ratings slot (even if this means that a higher ratings slot is left empty).

And so on.
 

Say we label these ratings slot from the top A B C D etc. 
A candidate X's A score is the number of ballots on which it is A rated. 
A candidate X's A+B score is the number of ballots on which it is rated A or B.
A candidate X's A+B+C score is the number of ballots on which it is rated A or B or C.
And so on.


If any candidate X has an A score  that is greater than any other candidate's approval score on ballots
that don't A-rate X, then elect the X with the greatest A score.

Otherwise, if any candidate X has an A+B score that is greater than any other candidate's approval score
on ballots that don't A-rate of B-rate X, then elect the X with the greatest A+B score.

And so on as in the versions that use a fixed number of ratings slots, if necessary electing the most
approved candidate.*

This is analogous with ER-Bucklin(whole) on ranked ballots:
